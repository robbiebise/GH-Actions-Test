# use a workflow run to watch for a PR, download the PR artifact and trigger a sonar scan

name: Run Sonar Scan

on:
  workflow_run:
    workflows: ["Receive PR"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });

            // Print out artifact names
            console.log("Artifact Names:");
            allArtifacts.data.artifacts.forEach((artifact) => {
              console.log(artifact.name);
            });
            

            // Find the artifact with the name "pr"
            let matchArtifact = allArtifacts.data.artifacts.find((artifact) => {
              return artifact.name == "pr";
            });

            // print out the artifact id
            console.log("Artifact ID:");
            console.log(matchArtifact.id);
            // print repo owner and repo
            console.log("Repo Owner:");
            console.log(context.repo.owner);
            console.log("Repo:");
            console.log(context.repo.repo);
            // download the artifact
            await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: "zip",
              });
      - run: unzip pr.zip

      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download PR artifact
        uses: actions/download-artifact@v4
        with:
          name: pr
          path: pr/

      # ls contents of pr directory
      - name: List pr directory
        run: ls -R pr
      # run sonar scan
      - name: Sonar Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

