# use a workflow run to watch for a PR, download the PR artifact and trigger a sonar scan

name: Run Sonar Scan

on:
  workflow_run:
    workflows: ["Receive PR"]
    types:
      - completed
  push:
    branches:
      - main

jobs:
  build-forked-pr:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_repository.owner.login != github.repository_owner
    steps:
      - name: Download Artifacts 
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ github.event.workflow_run.id }}
      - name: Read PR number
        run: |
          cat ./pr/NR
          echo "PR_NUMBER=$(cat ./pr/NR)" >> $GITHUB_ENV
      - name: Request GitHub API for PR data
        uses: octokit/request-action@v2.x
        id: get_pr_data
        with:
          route: GET /repos/{full_name}/pulls/${{ env.PR_NUMBER }}
          number: ${{ env.PR_NUMBER }}
          full_name: ${{ github.event.repository.full_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v3
        with:
            repository: ${{ github.event.workflow_run.head_repository.full_name }}
            ref: ${{ github.event.workflow_run.head_branch }}
            fetch-depth: 0

      # checkout the PR
      - name: Checkout base branch
        run: |
          git remote add upstream ${{ github.event.repository.clone_url }}
          git fetch upstream
          git checkout -B ${{ fromJson(steps.get_pr_data.outputs.data).base.ref }} upstream/${{ fromJson(steps.get_pr_data.outputs.data).base.ref }}
          git checkout ${{ github.event.workflow_run.head_branch }}
          git clean -ffdx && git reset --hard HEAD

      # echo PR data for sonarscan
      - name: Print PR data
        run: |
          echo "PR_NUMBER: ${{ env.PR_NUMBER }}"
          echo "branch: ${{ github.event.workflow_run.head_branch }}"
          echo "base: ${{ fromJson(steps.get_pr_data.outputs.data).base.ref }}"
          echo "revision: ${{ fromJson(steps.get_pr_data.outputs.data).head.sha }}"
          echo "branch from steps: ${{ fromJson(steps.get_pr_data.outputs.data).head.ref }}"
      # run sonar scan
      - name: Sonar Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.pullrequest.key=${{ env.PR_NUMBER }}
            -Dsonar.pullrequest.branch=${{ github.event.workflow_run.head_repository.owner.login }}:${{ fromJson(steps.get_pr_data.outputs.data).head.ref }}
            -Dsonar.pullrequest.base=${{ fromJson(steps.get_pr_data.outputs.data).base.ref }}
            -Dsonar.pullrequest.revision=${{ fromJson(steps.get_pr_data.outputs.data).head.sha }}
  build-PR:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_repository.owner.login == github.repository_owner
    steps:
      - name: Downlod Artifacts 
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ github.event.workflow_run.id }}
        

      - name: Read PR number
        run: |
          cat ./pr/NR
          echo "PR_NUMBER=$(cat ./pr/NR)" >> $GITHUB_ENV
      # checkout the PR
      - name: Checkout PR
        uses: actions/checkout@v2
        with:
          ref: refs/pull/${{ env.PR_NUMBER }}/merge
          fetch-depth: 0


      - name: save PR data
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          PR_NUMBER: ${{ env.PR_NUMBER }}
        run: |
          echo "GITHUB_CONTEXT: $GITHUB_CONTEXT"
          echo "pr_head_ref=$(echo $GITHUB_CONTEXT | jq -r --arg PR_NUMBER "$PR_NUMBER" '.event.workflow_run.pull_requests[] | select(.number == ($PR_NUMBER | tonumber)) | .head.ref')" >> $GITHUB_ENV
          echo "pr_base_ref=$(echo $GITHUB_CONTEXT | jq -r --arg PR_NUMBER "$PR_NUMBER" '.event.workflow_run.pull_requests[] | select(.number == ($PR_NUMBER | tonumber)) | .base.ref')" >> $GITHUB_ENV


      # ensure the PR data was saved in the env by printing it
      - name: print PR data
        run: |
          echo "PR_NUMBER=${{ env.PR_NUMBER }}"
          echo "pr_head_ref=${{ env.pr_head_ref }}"
          echo "pr_base_ref=${{ env.pr_base_ref }}"


      # run sonar scan put PR info into sonar properties using with args
      - name: Sonar Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.pullrequest.key=${{ env.PR_NUMBER }}
            -Dsonar.pullrequest.branch=${{ env.pr_head_ref }}
            -Dsonar.pullrequest.base=${{ env.pr_base_ref }}


  build-main:
    runs-on: ubuntu-latest
    # if the workflow run is not a PR, run a normal scan
    if: >
      github.event_name == 'push' &&
      github.event.workflow_run.event != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Sonar Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

